How a Web App Works:

HTTP Request and Response

When a user opens a URL:

1) A request is generated by the browser.
2) The request is sent to the server that is hosting the application.
3) The server processes the request
4) A response is sent back to the user.

A typical HTTP request includes:

1) The HTTP Request Method, the resource location, and the HTTP version

2) The Host header, which tells us where the request is sent to

3) Other headers, which include information about the accepted language, the content type, the length of the content, and more

4) The request body: information sent with the request. This is also called the payload.

Common Request Methods and Response Codes

Common HTTP Methods:

1) GET is used for retrieving information or fetching data from the server
2) POST is used to transmit data to the server, including sensitive data like passwords

3) PUT is used to upload/update files on the webserver

4) DELETE is used to delete a resource on the webserver

5) HEAD is used to get the information about the response instead of the response itself

6) OPTIONS tells us which other types of methods can be sent on the webserver

Using curl:

curl is a command-line tool that allows us to send HTTP requests and analyze the response received.

The basic syntax for curl is:

curl -X <request method> <target> <options>

Use curl -h to see all of the available options.

Common HTTP Response Codes:

1) Any response code in the range of 100 is informational.

2) Any response code in the range of 200 is accepted and understood.

3) Any response code in the range of 300 is a Redirection.

4) Any response code in the range of 400 is a Client-Side Error.

5) Any response code in the range of 500 is a Server-Side Error.

New Terms:

HTTP Request: A request sent by the client to the server to perform actions on a specific resource URL. The action to be performed is defined by an HTTP Method.

HTTP Response: The reply from the server back to the client about the previously made request.

Hypertext Transfer Protocol (HTTP): An application layer protocol used to exchange data over the internet

Further Reading:

The OWASP Test HTTP Methods(https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/06-Test_HTTP_Methods.html) includes several tests using HTTP methods to exploit a web application.
